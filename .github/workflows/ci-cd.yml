name: CI/CD

on:
  push:
    branches:
      - prod
  pull_request:
    branches: [ prod ]
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: mykube    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  FRONTEND_DEPLOYMENT_NAME: frontend # Add your deployment name here.
  BACKEND_DEPLOYMENT_NAME: backend # Add your deployment name here.

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
    
    - name: Docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
      
    - name: Test with pytest
      run: |
        pip install -r requirements.txt
        cd chat-server && python test_cases.py
   
    - name: Build frontend
      uses: borales/actions-yarn@v2.3.0
      with:
        cmd: install # will run `yarn install` command
        
    - name: Build the Docker images - frontend, server, analyzer
      run: |
        make build
        cd chat-server && make build
        cd ../analyzer && make build
      
    - name: Push Docker Images 
      run: |
        make push
        cd chat-server && make push
        cd ../analyzer && make push
        
    # Get the GKE credentials so we can deploy to the cluster
    - name: Login to GKE cluster
      uses: google-github-actions/get-gke-credentials@<FILL>
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy to GKE cluster
      run: |-
        kubectl delete deployment frontend
        sleep 20
        kubectl delete deployment mserver
        sleep 20
        kubectl delete deployment analyzer
        sleep 20
        kubectl create -f chat-server/server-deployment.yaml
        sleep 20
        kubectl create -f analyzer/analyzer-deployment.yaml
        sleep 20
        kubectl create -f frontend-deployment.yaml
